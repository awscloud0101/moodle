name: Salesforce CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    name: Deploy to Dev Org

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1

      - name: Write Dev Server Key
        run: echo "${{ secrets.DEV_SERVERKEY }}" > server.key

      - name: Authenticate to Dev Org
        run: |
          sfdx auth:jwt:grant \
            --client-id ${{ secrets.DEV_CLIENTID }} \
            --jwt-key-file server.key \
            --username ${{ secrets.DEV_USERNAME }} \
            --instance-url https://test.salesforce.com \
            --alias moodledev

      - name: Deploy to Dev Org
        run: sf project deploy start -p force-app -o moodledev --wait 10

      - name: Upload Deployment Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dev-artifact
          path: force-app

  deploy-qa:
    if: github.ref == 'refs/heads/qa'
    runs-on: ubuntu-latest
    name: Deploy to QA Org
    needs: deploy-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Dev Artifact
        uses: actions/download-artifact@v3
        with:
          name: dev-artifact
          path: force-app

      - name: Install Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1

      - name: Write QA Server Key
        run: echo "${{ secrets.QA_SERVERKEY }}" > server.key

      - name: Authenticate to QA Org
        run: |
          sfdx auth:jwt:grant \
            --client-id ${{ secrets.QA_CLIENTID }} \
            --jwt-key-file server.key \
            --username ${{ secrets.QA_USERNAME }} \
            --instance-url https://test.salesforce.com \
            --alias moodleqa

      - name: Deploy to QA Org
        run: sf project deploy start -p force-app -o moodleqa --wait 10

      - name: Upload QA Deployment Artifact
        uses: actions/upload-artifact@v3
        with:
          name: qa-artifact
          path: force-app

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy to Production Org
    needs: deploy-qa

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download QA Artifact
        uses: actions/download-artifact@v3
        with:
          name: qa-artifact
          path: force-app

      - name: Install Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1

      - name: Write Prod Server Key
        run: echo "${{ secrets.PROD_SERVERKEY }}" > server.key

      - name: Authenticate to Production Org
        run: |
          sfdx auth:jwt:grant \
            --client-id ${{ secrets.PROD_CLIENTID }} \
            --jwt-key-file server.key \
            --username ${{ secrets.PROD_USERNAME }} \
            --instance-url https://login.salesforce.com \
            --alias moodleprod

      - name: Deploy to Production Org
        run: sf project deploy start -p force-app -o moodleprod --wait 10
